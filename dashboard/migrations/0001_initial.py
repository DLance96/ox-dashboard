# Generated by Django 3.0.7 on 2020-09-06 21:47

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brother',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('roster_number', models.IntegerField(blank=True, null=True)),
                ('date_pledged', models.DateField(blank=True, null=True)),
                ('school_status', models.CharField(choices=[('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('FY', 'Fifth Year'), ('AL', 'Alumni')], default='FR', max_length=2)),
                ('brother_status', models.CharField(choices=[('0', 'Candidate'), ('1', 'Brother'), ('2', 'Alumni')], default='0', max_length=1)),
                ('major', models.CharField(default='Undecided', max_length=200)),
                ('minor', models.CharField(blank=True, max_length=200, null=True)),
                ('case_ID', models.CharField(max_length=10)),
                ('birthday', models.DateField()),
                ('hometown', models.CharField(default='Cleveland, OH', max_length=200)),
                ('t_shirt_size', models.CharField(default='M', max_length=5)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('emergency_contact', models.CharField(default='Chapter President', max_length=200)),
                ('emergency_contact_phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('room_number', models.CharField(default='NA', max_length=3)),
                ('address', models.CharField(default='Theta Chi House', max_length=200)),
                ('standing_committee', models.CharField(choices=[('4', 'Unassigned'), ('0', 'Recruitment'), ('2', 'Health and Safety'), ('3', 'Social'), ('1', 'Public Relations')], default='4', max_length=1)),
                ('operational_committee', models.CharField(choices=[('2', 'Scholarship'), ('0', 'Alumni Relations'), ('3', 'Unassigned'), ('1', 'Membership Development')], default='3', max_length=1)),
                ('does_house_details', models.BooleanField(default=False)),
                ('does_kitchen_details', models.BooleanField(default=False)),
                ('in_house', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChapterEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Event', max_length=200)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('all_day', models.BooleanField(default=False)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.URLField(blank=True, null=True)),
                ('mandatory', models.BooleanField(default=True)),
                ('attendees_brothers', models.ManyToManyField(blank=True, to='dashboard.Brother')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DetailGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brothers', models.ManyToManyField(to='dashboard.Brother')),
            ],
        ),
        migrations.CreateModel(
            name='MinecraftPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='minecraft')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='photos')),
            ],
        ),
        migrations.CreateModel(
            name='PotentialNewMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
                ('case_ID', models.CharField(blank=True, max_length=10, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('notes', models.TextField(blank=True, null=True)),
                ('primary_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary', to='dashboard.Brother')),
                ('secondary_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary', to='dashboard.Brother')),
                ('tertiary_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tertiary', to='dashboard.Brother')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(choices=[('0', 'Spring'), ('1', 'Summer'), ('2', 'Fall')], default='0', max_length=1)),
                ('year', models.IntegerField(choices=[(2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], default=2020)),
            ],
        ),
        migrations.CreateModel(
            name='SundayDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.CharField(max_length=64)),
                ('long_description', models.TextField()),
                ('done', models.BooleanField(default=False)),
                ('due_date', models.DateField()),
                ('finished_time', models.DateTimeField(null=True)),
                ('finished_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Brother')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supplies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('what', models.CharField(max_length=256)),
                ('done', models.BooleanField(default=False)),
                ('when', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ThursdayDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.CharField(max_length=64)),
                ('long_description', models.TextField()),
                ('done', models.BooleanField(default=False)),
                ('due_date', models.DateField()),
                ('finished_time', models.DateTimeField(null=True)),
                ('brother', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Brother')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SundayGroupDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField()),
                ('details', models.ManyToManyField(to='dashboard.SundayDetail')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.DetailGroup')),
            ],
        ),
        migrations.CreateModel(
            name='StudyTableEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Event', max_length=200)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('all_day', models.BooleanField(default=False)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.URLField(blank=True, null=True)),
                ('attendees_brothers', models.ManyToManyField(blank=True, to='dashboard.Brother')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Service Event', max_length=200)),
                ('description', models.TextField(default='I did the service thing')),
                ('hours', models.IntegerField(default=0)),
                ('date_applied', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('0', 'Pending'), ('1', 'Awaiting Approval'), ('2', 'Approved'), ('3', 'Denied')], default='0', max_length=1)),
                ('date', models.DateField()),
                ('brother', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Brother')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Event', max_length=200)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('all_day', models.BooleanField(default=False)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.URLField(blank=True, null=True)),
                ('attendees_brothers', models.ManyToManyField(blank=True, to='dashboard.Brother')),
                ('rsvp_brothers', models.ManyToManyField(blank=True, related_name='rsvp_service', to='dashboard.Brother')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScholarshipReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('past_semester_gpa', models.DecimalField(decimal_places=2, default=4.0, max_digits=5)),
                ('cumulative_gpa', models.DecimalField(decimal_places=2, default=4.0, max_digits=5)),
                ('scholarship_plan', models.TextField(default='Scholarship plan has not been setup yet if you past semester GPA or cum GPA are below 3.0 you should setup a meeting to have this corrected')),
                ('brother', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Brother')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='ScholarshipEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Event', max_length=200)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('all_day', models.BooleanField(default=False)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.URLField(blank=True, null=True)),
                ('attendees_brothers', models.ManyToManyField(blank=True, to='dashboard.Brother')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecruitmentEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Event', max_length=200)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('all_day', models.BooleanField(default=False)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.URLField(blank=True, null=True)),
                ('rush', models.BooleanField(default=True)),
                ('picture', models.ImageField(null=True, upload_to='recruitment')),
                ('location', models.TextField(blank=True, null=True)),
                ('attendees_brothers', models.ManyToManyField(blank=True, to='dashboard.Brother')),
                ('attendees_pnms', models.ManyToManyField(blank=True, to='dashboard.PotentialNewMember')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=45)),
                ('ec', models.BooleanField(default=False)),
                ('brothers', models.ManyToManyField(related_name='brothers', to='dashboard.Brother')),
            ],
        ),
        migrations.CreateModel(
            name='PhilanthropyEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Event', max_length=200)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('all_day', models.BooleanField(default=False)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.URLField(blank=True, null=True)),
                ('attendees_brothers', models.ManyToManyField(blank=True, to='dashboard.Brother')),
                ('rsvp_brothers', models.ManyToManyField(blank=True, related_name='rsvp_philanthropy', to='dashboard.Brother')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthAndSafetyEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Event', max_length=200)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('all_day', models.BooleanField(default=False)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.URLField(blank=True, null=True)),
                ('attendees_brothers', models.ManyToManyField(blank=True, to='dashboard.Brother')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Excuse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField(default='I will not be attending because', verbose_name='Reasoning')),
                ('response_message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('0', 'Pending'), ('1', 'Approved'), ('2', 'Denied'), ('3', 'Non-Mandatory')], default='0', max_length=1)),
                ('brother', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Brother')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ChapterEvent')),
            ],
        ),
        migrations.AddField(
            model_name='detailgroup',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester'),
        ),
        migrations.CreateModel(
            name='CommitteeMeetingEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Event', max_length=200)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('all_day', models.BooleanField(default=False)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.URLField(blank=True, null=True)),
                ('committee', models.CharField(choices=[('0', 'Recruitment'), ('2', 'Health and Safety'), ('3', 'Social'), ('6', 'Scholarship'), ('5', 'Membership Development'), ('4', 'Alumni Relations'), ('1', 'Public Relations')], max_length=1)),
                ('attendees_brothers', models.ManyToManyField(blank=True, to='dashboard.Brother')),
                ('committee_chair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Position')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='chapterevent',
            name='semester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester'),
        ),
        migrations.AddField(
            model_name='brother',
            name='semester_joined',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Semester'),
        ),
        migrations.AddField(
            model_name='brother',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
